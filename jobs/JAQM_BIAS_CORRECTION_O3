#!/bin/bash

date
export PS4=' $SECONDS + '
set -xue

#-----------------------------------------------------------------------
# Source the variable definitions file and the bash utility functions.
#-----------------------------------------------------------------------
. $USHdir/source_util_funcs.sh
source_config_for_task "cpl_aqm_parm|task_run_post|task_bias_correction_o3" ${GLOBAL_VAR_DEFNS_FP}

export DATAROOT="${DATAROOT:-${DATAROOT_dfv}}"
export DATA=${DATA:-${DATAROOT}/${jobid}}

mkdir -p ${DATA}
cd ${DATA}

export cycle=${cycle:-t${cyc}z}
setpdy.sh
. ./PDY

. $USHdir/job_preamble.sh

export SENDDBN=${SENDDBN:-YES}
export SENDECF=${SENDECF:-YES}
export SENDCOM=${SENDCOM:-YES}
export SENDDBN_NTC=${SENDDBN_NTC:-NO}

export USHaqm=${USHaqm:-${HOMEaqm}/ush}
export EXECaqm=${EXECaqm:-${HOMEaqm}/exec}
export PARMaqm=${PARMaqm:-${HOMEaqm}/parm}
export FIXaqm=${FIXaqm:-${HOMEaqm}/fix}
export UTILaqm=${UTILaqm:-${HOMEaqm}/util}

export COMINgfs="${COMINgfs:-$(compath.py ${envir}/gfs/${gfs_ver})}"
export COMIN="${COMIN:-$(compath.py -o ${NET}/${model_ver}/${RUN}.${PDY})}"
export COMINm1="${COMINm1:-$(compath.py -o ${NET}/${model_ver}/${RUN}.${PDYm1})}"
export COMINm2="${COMINm1:-$(compath.py -o ${NET}/${model_ver}/${RUN}.${PDYm2})}"
export COMOUT="${COMOUT:-$(compath.py -o ${NET}/${model_ver}/${RUN}.${PDY}/${cyc})}"

export PCOM=${PCOM:-${COMOUT}/wmo}
export DCOMINairnow="${DCOMINairnow:-${DCOMROOT}}"

export COMINbicor=${COMINbicor:-$(compath.py ${NET}/${model_ver}})}
export COMOUTbicor=${COMOUTbicor:-$(compath.py -o ${NET}/${aqm_ver}})}
#
#-----------------------------------------------------------------------
# Save current shell options (in a global array).  Then set new options
# for this script/function.
#-----------------------------------------------------------------------
#
{ save_shell_opts; . $USHdir/preamble.sh; } > /dev/null 2>&1
#
#-----------------------------------------------------------------------
# Get the full path to the file in which this script/function is located 
# (scrfunc_fp), the name of that file (scrfunc_fn), and the directory in
# which the file is located (scrfunc_dir).
#-----------------------------------------------------------------------
#
scrfunc_fp=$( $READLINK -f "${BASH_SOURCE[0]}" )
scrfunc_fn=$( basename "${scrfunc_fp}" )
scrfunc_dir=$( dirname "${scrfunc_fp}" )
#
#-----------------------------------------------------------------------
# Print message indicating entry into script.
#-----------------------------------------------------------------------
#
print_info_msg "
========================================================================
Entering script:  \"${scrfunc_fn}\"
In directory:     \"${scrfunc_dir}\"

This is the J-job script for the task that runs BIAS-CORRECTION-O3.
========================================================================"
#
#-----------------------------------------------------------------------
# Set the run directory.
#-----------------------------------------------------------------------
#
DATA="${DATA:-${COMIN}${SLASH_ENSMEM_SUBDIR}/tmp_BIAS_CORRECTION_O3}"

mkdir -p ${PCOM}

export PARMaqm_utils="${PARMaqm_utils:-${HOMEaqm}/sorc/AQM-utils/parm}"

TMP_STDAY=`${NDATE} -8760 ${PDY}${cyc} | cut -c1-8`  # 1 year back
export BC_STDAY=${BC_STDAY:-${TMP_STDAY}}
#
#-----------------------------------------------------------------------
#
# Call the ex-script for this J-job and pass to it the necessary varia-
# bles.
#
#-----------------------------------------------------------------------
#
$SCRIPTSdir/exaqm_bias_correction_o3.sh || \
print_err_msg_exit "\
Call to ex-script corresponding to J-job \"${scrfunc_fn}\" failed."
#
#-----------------------------------------------------------------------
# Run job postamble.
#-----------------------------------------------------------------------
#
job_postamble
#
#-----------------------------------------------------------------------
# Restore the shell options saved at the beginning of this script/func-
# tion.
#-----------------------------------------------------------------------
#
{ restore_shell_opts; } > /dev/null 2>&1

